{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet FotoOlComponent = class FotoOlComponent {\n  constructor() {\n    this.teamName = '';\n    // aktuelle Koordinaten mit o,o initialisieren\n    this.center = {\n      lng: 0,\n      lat: 0\n    };\n    // Strafpunkte (Summe der Distanz in Meter von den Foto-Koordinaten).\n    this.result = 0;\n    // Ablaufsteuerung\n    this.showHelp = true;\n    this.hasStarted = false;\n    this.showFotos = false;\n    this.showMap = false;\n    this.showHint = false;\n    this.amZiel = false;\n    // Index des zu suchenden Fotos\n    this.index = 0;\n    // Fotos mit ihren Koordinaten und Hilfetexten.\n    this.photos = [{\n      photoUrl: '../../assets/images/lucas.jpeg',\n      coordinates: {\n        lat: 46.76213,\n        lng: 8.63025\n      },\n      hint: 'Bei Sandra im Eriz'\n    }, {\n      photoUrl: '../../assets/images/muenchen.jpg',\n      coordinates: {\n        lat: 46.76213,\n        lng: 7.63025\n      },\n      hint: 'WM 1974'\n    }];\n    this.lastDistance = 0;\n  }\n  setTeamName(teamName) {\n    this.teamName = teamName;\n  }\n  start() {\n    if (this.teamName != '') {\n      this.showHelp = false;\n      this.hasStarted = true;\n      this.showFotos = true;\n    }\n  }\n  getPhotoUrl() {\n    return this.photos[this.index].photoUrl;\n  }\n  setCurrentCoordinates() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      console.log(\"setCurrentCoordinates center:\", this.center);\n    });\n    this.showMap = true;\n  }\n  nextPhoto() {\n    this.showHint = false;\n    this.lastDistance = this.getDistance();\n    this.result += this.lastDistance;\n    this.showMap = false;\n    this.index++;\n    if (this.index >= this.photos.length) {\n      this.amZiel = true;\n      this.showFotos = false;\n    }\n  }\n  getHint() {\n    if (!this.showHint) {\n      this.result += 10;\n    }\n    this.showHint = true;\n    return this.photos[this.index].hint;\n  }\n  getDistance() {\n    const x1 = this.center?.lat;\n    const x2 = this.photos[this.index].coordinates.lat;\n    const y1 = this.center?.lng;\n    const y2 = this.photos[this.index].coordinates.lng;\n    const a = x1 - x2;\n    const b = y1 - y2;\n    const c = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    return Math.trunc(c * 1000); //in Meter umrechnen\n  }\n};\n\n__decorate([Input()], FotoOlComponent.prototype, \"teamName\", void 0);\nFotoOlComponent = __decorate([Component({\n  selector: 'app-foto-ol',\n  templateUrl: './foto-ol.component.html',\n  styleUrls: ['./foto-ol.component.css']\n})], FotoOlComponent);\nexport { FotoOlComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","FotoOlComponent","constructor","lng","lat","photoUrl","coordinates","hint","setTeamName","teamName","start","showHelp","hasStarted","showFotos","getPhotoUrl","photos","index","setCurrentCoordinates","navigator","geolocation","getCurrentPosition","position","center","coords","latitude","longitude","console","log","showMap","nextPhoto","showHint","lastDistance","getDistance","result","length","amZiel","getHint","x1","x2","y1","y2","a","b","c","Math","sqrt","pow","trunc","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/xander/git.FotoOL/FotoOL/src/app/foto-ol/foto-ol.component.ts"],"sourcesContent":["import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-foto-ol',\n  templateUrl: './foto-ol.component.html',\n  styleUrls: ['./foto-ol.component.css']\n})\nexport class FotoOlComponent {\n  @Input() teamName: string ='';\n  // aktuelle Koordinaten mit o,o initialisieren\n  center: { lng: number; lat: number; } = {lng: 0, lat: 0};\n\n  // Strafpunkte (Summe der Distanz in Meter von den Foto-Koordinaten).\n  result = 0;\n\n  // Ablaufsteuerung\n  showHelp = true;\n\n  hasStarted = false;\n  showFotos = false;\n  showMap = false;\n  showHint = false;\n  amZiel = false;\n\n  // Index des zu suchenden Fotos\n  index = 0;\n\n  // Fotos mit ihren Koordinaten und Hilfetexten.\n  photos = [\n    {\n      photoUrl: '../../assets/images/lucas.jpeg',\n      coordinates: {\n        lat: 46.76213,\n        lng: 8.63025\n      },\n      hint: 'Bei Sandra im Eriz'\n    },\n    {\n      photoUrl: '../../assets/images/muenchen.jpg',\n      coordinates: {\n        lat: 46.76213,\n        lng: 7.63025\n      },\n      hint: 'WM 1974'\n    }\n  ];\n  lastDistance = 0;\n  setTeamName(teamName: string) {\n    this.teamName = teamName;\n  }\n\n  start() {\n    if (this.teamName != '') {\n      this.showHelp = false;\n      this.hasStarted = true;\n      this.showFotos = true;\n    }\n  }\n\n  getPhotoUrl() {\n    return (this.photos)[this.index].photoUrl;\n  }\n  setCurrentCoordinates() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      };\n      console.log(\"setCurrentCoordinates center:\",this.center);\n    });\n    this.showMap = true;\n  }\n\n  nextPhoto() {\n    this.showHint = false;\n    this.lastDistance = this.getDistance();\n    this.result += this.lastDistance;\n    this.showMap = false;\n    this.index ++;\n    if (this.index >= this.photos.length) {\n      this.amZiel = true;\n      this.showFotos = false;\n    }\n  }\n\n  getHint() {\n    if (!this.showHint) {\n      this.result += 10\n    }\n    this.showHint = true;\n    return (this.photos)[this.index].hint;\n  }\n\n  getDistance(): number {\n    const x1 = this.center?.lat;\n    const x2 = this.photos[this.index].coordinates.lat;\n    const y1 = this.center?.lng;\n    const y2 = this.photos[this.index].coordinates.lng;\n\n    const a = x1 - x2;\n    const b = y1 - y2;\n    const c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2));\n\n    return Math.trunc(c * 1000); //in Meter umrechnen\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
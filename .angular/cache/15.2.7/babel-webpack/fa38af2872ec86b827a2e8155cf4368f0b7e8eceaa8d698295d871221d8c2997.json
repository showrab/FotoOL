{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"ngx-webcam\";\nfunction AdminComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Koordinaten \", ctx_r1.center.lat, \", \", ctx_r1.center.lng, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r1.webcamImage.imageAsDataUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class AdminComponent {\n  constructor() {\n    this.adminPhoto = new EventEmitter();\n    this.clearPhotos = new EventEmitter();\n    this.showCapturedImage = false;\n    // Kamera\n    this.trigger = new Subject();\n    this.nextWebcam = new Subject();\n    this.sysImage = '';\n    this.center = {\n      lng: 0,\n      lat: 0\n    };\n    this.hint = \"\";\n  }\n  // Kamera\n  initCamera() {\n    //this.trigger.next(void 0);\n    this.clearPhotos.emit();\n  }\n  getSnapshot() {\n    this.trigger.next(void 0);\n    this.showCapturedImage = true;\n  }\n  captureImg(webcamImage) {\n    this.webcamImage = webcamImage;\n    this.sysImage = webcamImage.imageAsDataUrl;\n    console.info('got webcam image', this.sysImage);\n    this.setCurrentCoordinates();\n  }\n  get invokeObservable() {\n    let observable = this.trigger.asObservable();\n    return observable;\n  }\n  get nextWebcamObservable() {\n    return this.nextWebcam.asObservable();\n  }\n  nextPhoto() {\n    throw new Error('Method not implemented.');\n  }\n  /** Aktuelle Koordinaten speichern. */\n  setCurrentCoordinates() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      console.log(\"setCurrentCoordinates center:\", this.center);\n      let photo = {\n        photoUrl: this.sysImage,\n        coordinates: this.center,\n        hint: this.hint\n      };\n      //console.log(photo);\n      this.adminPhoto.emit(photo);\n    });\n  }\n  setHint(hint) {\n    this.hint = hint;\n  }\n}\nAdminComponent.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || AdminComponent)();\n};\nAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminComponent,\n  selectors: [[\"app-admin\"]],\n  outputs: {\n    adminPhoto: \"adminPhoto\",\n    clearPhotos: \"clearPhotos\"\n  },\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"col-md-12\"], [3, \"trigger\", \"imageCapture\"], [3, \"keyup.enter\", \"blur\"], [\"hint\", \"\"], [1, \"button\", 3, \"click\"], [\"class\", \"col-12\", 4, \"ngIf\"], [1, \"col-12\"], [\"id\", \"results\"], [\"height\", \"400px\", 3, \"src\"]],\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Angular Webcam Capture Image from Camera\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"webcam\", 2);\n      i0.ɵɵlistener(\"imageCapture\", function AdminComponent_Template_webcam_imageCapture_4_listener($event) {\n        return ctx.captureImg($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6, \" Hint \");\n      i0.ɵɵelementStart(7, \"input\", 3, 4);\n      i0.ɵɵlistener(\"keyup.enter\", function AdminComponent_Template_input_keyup_enter_7_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.setHint(_r0.value));\n      })(\"blur\", function AdminComponent_Template_input_blur_7_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.setHint(_r0.value));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AdminComponent_Template_button_click_10_listener() {\n        return ctx.initCamera();\n      });\n      i0.ɵɵtext(11, \" Kamera Starten \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AdminComponent_Template_button_click_12_listener() {\n        return ctx.getSnapshot();\n      });\n      i0.ɵɵtext(13, \" Bild mit Koordinaten aufnehmen \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, AdminComponent_div_14_Template, 4, 3, \"div\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"trigger\", ctx.invokeObservable);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.showCapturedImage);\n    }\n  },\n  dependencies: [i1.NgIf, i2.WebcamComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","Subject","i0","AdminComponent","constructor","lng","lat","initCamera","clearPhotos","emit","getSnapshot","trigger","next","showCapturedImage","captureImg","webcamImage","sysImage","imageAsDataUrl","console","info","setCurrentCoordinates","invokeObservable","observable","asObservable","nextWebcamObservable","nextWebcam","nextPhoto","Error","navigator","geolocation","getCurrentPosition","position","center","coords","latitude","longitude","log","photo","photoUrl","coordinates","hint","adminPhoto","setHint","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/xander/git.FotoOL/FotoOL/src/app/admin/admin.component.ts","/Users/xander/git.FotoOL/FotoOL/src/app/admin/admin.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { Observable, Subject } from \"rxjs\";\nimport { WebcamImage } from \"ngx-webcam\";\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent {\n  @Output() adminPhoto = new EventEmitter;\n  @Output() clearPhotos = new EventEmitter;\n  showCapturedImage=false;\n\n  // Kamera\n  private trigger: Subject<any> = new Subject();\n  //webcamImage = WebcamImage;\n  public webcamImage!: WebcamImage;\n  private nextWebcam: Subject<any> = new Subject();\n  sysImage = '';\n  private video: HTMLElement | null | undefined;\n  private canvas: HTMLElement | null | undefined;\n  center: { lat: number; lng: number; } = {lng: 0, lat: 0};\n  skipMap: any;\n  hint: string = \"\";\n\n  // Kamera\n  initCamera() {\n    //this.trigger.next(void 0);\n    this.clearPhotos.emit();\n  }\n  \n  public getSnapshot(): void {\n    this.trigger.next(void 0);\n    this.showCapturedImage = true;\n  }\n\n  public captureImg(webcamImage: WebcamImage): void {\n    this.webcamImage = webcamImage;\n    this.sysImage = webcamImage!.imageAsDataUrl;\n    console.info('got webcam image', this.sysImage);\n    this.setCurrentCoordinates();\n  }\n  \n  public get invokeObservable(): Observable<any> {\n    let observable = this.trigger.asObservable();\n    return observable;\n  }\n  \n  public get nextWebcamObservable(): Observable<any> {\n    return this.nextWebcam.asObservable();\n  }\n\n  nextPhoto() {\n    throw new Error('Method not implemented.');\n  }\n\n  /** Aktuelle Koordinaten speichern. */\n  setCurrentCoordinates() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      };\n      console.log(\"setCurrentCoordinates center:\",this.center);\n\n      let photo = {\n        photoUrl: this.sysImage,\n        coordinates: this.center,\n        hint: this.hint\n      };\n\n      //console.log(photo);\n      this.adminPhoto.emit(photo);\n    });\n  }\n\n  setHint(hint: string) {\n    this.hint = hint;\n  }\n}\n","<div class=\"container mt-5\">\n  <h2>Angular Webcam Capture Image from Camera</h2>\n  <div class=\"col-md-12\">\n    <webcam\n      [trigger]=\"invokeObservable\"\n      (imageCapture)=\"captureImg($event)\"\n    ></webcam>\n  </div>\n  <p>\n    Hint\n    <input #hint\n           (keyup.enter)=\"setHint(hint.value)\"\n           (blur)=\"setHint(hint.value)\">\n  </p>\n\n  <div class=\"col-md-12\">\n    <button class=\"button\" (click)=\"initCamera()\">\n      Kamera Starten\n    </button>\n    <button class=\"button\" (click)=\"getSnapshot()\">\n      Bild mit Koordinaten aufnehmen\n    </button>\n  </div>\n  <div class=\"col-12\" *ngIf=\"showCapturedImage\">\n    <div id=\"results\">Koordinaten {{center.lat}}, {{center.lng}}</div>\n    <img [src]=\"webcamImage.imageAsDataUrl\" height=\"400px\" />\n  </div>\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}